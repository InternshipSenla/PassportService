// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PassportService.Infrastructure;

#nullable disable

namespace PassportService.Migrations
{
    [DbContext(typeof(PassportDbContext))]
    partial class PassportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PassportService.Core.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<DateTime>>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone[]");

                    b.Property<DateTime>("DateLastRequest")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<List<DateTime?>>("RemovedAt")
                        .HasColumnType("timestamp with time zone[]");

                    b.Property<int>("Series")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Series", "Number")
                        .IsUnique();

                    b.ToTable("Passports");
                });
#pragma warning restore 612, 618
        }
    }
}
